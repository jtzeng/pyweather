#!/usr/bin/python
# -*- coding: utf-8 -*-
# Port of 'ansiweather': https://github.com/fcambus/ansiweather

import ConfigParser
import json
import os
import sys
import time
import urllib2

BLACK = '\033[30;1m'
RED = '\033[31;1m'
GREEN = '\033[32;1m'
YELLOW = '\033[33;1m'
BLUE = '\033[34;1m'
MAGENTA = '\033[35;1m'
CYAN = '\033[36;1m'
WHITE = '\033[37;1m'
RESET = '\033[0m'

# Read and process the config, if any.
# TODO: This is hideous.
cfg_path = '%s/.pyweatherrc' % os.path.expanduser('~')
cfg = ConfigParser.SafeConfigParser()

cfg.add_section('main')
cfg.set('main', 'location', 'Beijing,CN')
cfg.set('main', 'units', 'imperial')
cfg.set('main', 'symbols', 'yes')

cfg.add_section('colors')
cfg.set('colors', 'background', '') # '\033[44m'
cfg.set('colors', 'text', BLUE)
cfg.set('colors', 'data', YELLOW)
cfg.set('colors', 'delimiter', '%s=>' % MAGENTA)
cfg.set('colors', 'dashes', '\n') # '\033[34m-'
cfg.set('colors', 'city_col', RED)
cfg.set('colors', 'sym_col', GREEN)

cfg.add_section('icons')
cfg.set('icons', 'sun', '\033[33;1m\xe2\x98\x80')
cfg.set('icons', 'moon', '\033[36m\xe2\x98\xbd')
cfg.set('icons', 'clouds', '\033[37;1m\xe2\x98\x81')
cfg.set('icons', 'rain', '\xe2\x98\x94')
cfg.set('icons', 'fog', '\xe2\x96\x92')
cfg.set('icons', 'mist', '\033[37m\xe2\x96\x92')
cfg.set('icons', 'snow', '\033[37m\xe2\x9d\x84')
cfg.set('icons', 'thunderstorm', '\033[33m\xe2\x9a\xa1')

cfg.read(cfg_path)

location = cfg.get('main', 'location')
units = cfg.get('main', 'units')
symbols = cfg.getboolean('main', 'symbols')

background = cfg.get('colors', 'background')
text = cfg.get('colors', 'text')
data = cfg.get('colors', 'data')
delimiter = cfg.get('colors', 'delimiter')
dashes = cfg.get('colors', 'dashes')
city_col = cfg.get('colors', 'city_col')
sym_col = cfg.get('colors', 'sym_col')

sun = cfg.get('icons', 'sun')
moon = cfg.get('icons', 'moon')
clouds = cfg.get('icons', 'clouds')
rain = cfg.get('icons', 'rain')
fog = cfg.get('icons', 'fog')
mist = cfg.get('icons', 'mist')
snow = cfg.get('icons', 'snow')
thunderstorm = cfg.get('icons', 'thunderstorm')

api_url = 'http://api.openweathermap.org/data/2.5/weather?q=%s&units=%s'

# Process CLI args (should be done with argparse later on).
if len(sys.argv) == 2:
	location = sys.argv[1]

# Set the scale.
scale = u'\u00b0%s' % ('F' if units == 'imperial' else 'C')

# Set the wind speed unit.
speed_unit = 'mph' if units == 'imperial' else 'm/s'

# Fetch weather data.
u = urllib2.urlopen(api_url % (location, units))
lines = u.read()
u.close()
winfo = json.loads(lines)

# Process weather data.
city = winfo['name']
temperature = winfo['main']['temp']
humidity = winfo['main']['humidity']
pressure = winfo['main']['pressure']
sky = winfo['weather'][0]['main']
sunrise = winfo['sys']['sunrise']
sunset = winfo['sys']['sunset']
wind = winfo['wind']['speed']

# Set the period.
now = int(time.time())
period = 'night' if now >= sunset or now <= sunrise else 'day'

icons = {
	'Clear': moon if period == 'night' else sun,
	'Clouds': clouds,
	'Rain': rain,
	'Fog': fog,
	'Mist': mist,
	'Snow': snow,
	'Thunderstorm': thunderstorm
}

# Set the icons.
try:
	icon = icons[sky]
except KeyError:
	icon = sky

if not symbols:
	icon = sky
icon = icon.decode('utf-8')

# Still ugly, but better.
def print_weather(temperature, humidity, pressure):
	sys.stdout.write('%s%s ' % (background, text))
	sys.stdout.write('Current weather in %s%s %s%s %s %s%s %s %s%s ' % (
		city_col, city, delimiter, data, temperature, sym_col, scale,
		icon, dashes, text
	))
	sys.stdout.write('Humidity %s%s %s %s%% %s%s ' % (delimiter, data,
		humidity, sym_col, dashes, text
	))
	sys.stdout.write('Wind %s%s %s %s%s %s%s ' % (delimiter, data, wind,
		sym_col, speed_unit, dashes, text
	))
	sys.stdout.write('Pressure %s%s %s %shPa%s\n' % (delimiter, data,
		pressure, sym_col, RESET
	))
	sys.stdout.flush()

# Display current weather.
print_weather(temperature, humidity, pressure)
